// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injector

import (
	"github.com/backent/ai-golang/controllers/controllers_auth"
	"github.com/backent/ai-golang/controllers/controllers_question"
	"github.com/backent/ai-golang/libs"
	"github.com/backent/ai-golang/repositories/repositories_storage"
	"github.com/backent/ai-golang/services/services_ai"
	"github.com/backent/ai-golang/services/services_question"
	"github.com/google/wire"
	"github.com/julienschmidt/httprouter"
)

// Injectors from injector.go:

func InitializeRouter() *httprouter.Router {
	authControllerInterface := controllers_auth.NewAuthControllerImplementation()
	aiServiceInterface := services_ai.NewAiServiceGemini()
	storageServiceInterface := repositories_storage.NewStorageServiceLocalImplementation()
	questionServiceInterface := services_question.NewQuestionServiceImplementation(aiServiceInterface, storageServiceInterface)
	questionControllerInterface := controllers_question.NewQuestionControllerImplementation(questionServiceInterface)
	router := libs.NewRouter(authControllerInterface, questionControllerInterface)
	return router
}

// injector.go:

var AuthSet = wire.NewSet(controllers_auth.NewAuthControllerImplementation)

var QuestionSet = wire.NewSet(controllers_question.NewQuestionControllerImplementation, services_question.NewQuestionServiceImplementation)

var AiSet = wire.NewSet(services_ai.NewAiServiceGemini)

var RepositoriesSet = wire.NewSet(repositories_storage.NewStorageServiceLocalImplementation)
